"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArxivDownloadTool = exports.ArxivSearchTool = void 0;
const axios_1 = __importDefault(require("axios"));
const index_1 = require("./index");
const fast_xml_parser_1 = require("fast-xml-parser");
class ArxivSearchTool extends index_1.BaseTool {
    constructor() {
        super('arxiv-search', 'Search for academic papers on arXiv');
        this.parser = new fast_xml_parser_1.XMLParser({
            ignoreAttributes: false,
            attributeNamePrefix: '@_'
        });
    }
    async execute(query, maxResults = 10) {
        try {
            const response = await axios_1.default.get(`http://export.arxiv.org/api/query`, {
                params: {
                    search_query: encodeURIComponent(query),
                    max_results: maxResults,
                    sortBy: 'lastUpdatedDate',
                    sortOrder: 'descending'
                }
            });
            const parsed = this.parser.parse(response.data);
            const entries = parsed.feed.entry;
            if (!entries) {
                return [];
            }
            // Handle both single and multiple entries
            const entriesArray = Array.isArray(entries) ? entries : [entries];
            return entriesArray.map((entry) => ({
                id: entry.id.split('/abs/')[1],
                title: entry.title.replace(/\s+/g, ' ').trim(),
                authors: Array.isArray(entry.author)
                    ? entry.author.map((a) => a.name)
                    : [entry.author.name],
                summary: entry.summary.replace(/\s+/g, ' ').trim(),
                published: entry.published,
                updated: entry.updated,
                link: entry.id
            }));
        }
        catch (error) {
            if (error instanceof Error) {
                throw new Error(`Failed to search arXiv: ${error.message}`);
            }
            throw new Error('Failed to search arXiv: Unknown error');
        }
    }
}
exports.ArxivSearchTool = ArxivSearchTool;
class ArxivDownloadTool extends index_1.BaseTool {
    constructor() {
        super('arxiv-download', 'Download PDF of an arXiv paper');
    }
    async execute(paperId) {
        try {
            const response = await axios_1.default.get(`https://arxiv.org/pdf/${paperId}.pdf`, {
                responseType: 'arraybuffer'
            });
            return Buffer.from(response.data);
        }
        catch (error) {
            if (error instanceof Error) {
                throw new Error(`Failed to download paper: ${error.message}`);
            }
            throw new Error('Failed to download paper: Unknown error');
        }
    }
}
exports.ArxivDownloadTool = ArxivDownloadTool;
