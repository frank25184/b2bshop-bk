export interface ProcessConfig {
    maxRetries?: number;
    timeout?: number;
    metadata?: Record<string, any>;
}
export interface Process {
    id: string;
    status: 'pending' | 'running' | 'completed' | 'failed';
    config: ProcessConfig;
    start(): Promise<void>;
    stop(): Promise<void>;
    getStatus(): string;
    getResult(): any;
}
export declare class BaseProcess implements Process {
    id: string;
    status: 'pending' | 'running' | 'completed' | 'failed';
    config: ProcessConfig;
    private result;
    constructor(id: string, config?: ProcessConfig);
    start(): Promise<void>;
    stop(): Promise<void>;
    getStatus(): string;
    getResult(): any;
}
