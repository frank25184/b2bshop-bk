export interface TaskConfig {
    priority?: number;
    deadline?: Date;
    dependencies?: string[];
    metadata?: Record<string, any>;
}
export interface Task {
    id: string;
    name: string;
    description: string;
    status: 'pending' | 'in-progress' | 'completed' | 'failed';
    config: TaskConfig;
    execute(): Promise<void>;
    cancel(): Promise<void>;
}
export declare class BaseTask implements Task {
    id: string;
    name: string;
    description: string;
    status: 'pending' | 'in-progress' | 'completed' | 'failed';
    config: TaskConfig;
    constructor(id: string, name: string, description: string, config?: TaskConfig);
    execute(): Promise<void>;
    cancel(): Promise<void>;
}
