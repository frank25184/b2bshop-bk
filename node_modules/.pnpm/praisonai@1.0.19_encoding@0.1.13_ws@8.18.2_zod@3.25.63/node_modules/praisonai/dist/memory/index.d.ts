export interface Memory {
    id: string;
    content: any;
    timestamp: Date;
    metadata: Record<string, any>;
}
export interface MemoryStore {
    add(memory: Memory): void;
    get(id: string): Memory | undefined;
    search(query: string): Memory[];
    update(id: string, memory: Partial<Memory>): boolean;
    delete(id: string): boolean;
    clear(): void;
}
export declare class BaseMemoryStore implements MemoryStore {
    private memories;
    constructor();
    add(memory: Memory): void;
    get(id: string): Memory | undefined;
    search(query: string): Memory[];
    update(id: string, update: Partial<Memory>): boolean;
    delete(id: string): boolean;
    clear(): void;
}
