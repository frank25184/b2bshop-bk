export interface Knowledge {
    id: string;
    type: string;
    content: any;
    metadata: Record<string, any>;
}
export interface KnowledgeBase {
    addKnowledge(knowledge: Knowledge): void;
    getKnowledge(id: string): Knowledge | undefined;
    searchKnowledge(query: string): Knowledge[];
    updateKnowledge(id: string, knowledge: Partial<Knowledge>): boolean;
    deleteKnowledge(id: string): boolean;
}
export declare class BaseKnowledgeBase implements KnowledgeBase {
    private knowledge;
    constructor();
    addKnowledge(knowledge: Knowledge): void;
    getKnowledge(id: string): Knowledge | undefined;
    searchKnowledge(query: string): Knowledge[];
    updateKnowledge(id: string, update: Partial<Knowledge>): boolean;
    deleteKnowledge(id: string): boolean;
}
