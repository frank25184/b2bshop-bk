     {{#extend "css"}}
     <style>
        h4.sb-mb-15{margin:4rem!important;font-size:1.5rem;}
        .tip{text-align: left;color:grey}
     </style>
     {{/extend}}
      <section class="sb-banner sb-banner-color">
        <div class="container">
          <div class="row align-items-center">
            <div class="col-lg-12">
              <div class="sb-contact-form-frame">
                {{!-- <div class="sb-illustration-9">
                  <img src="/images/picture/envelope-1.png" alt="envelope" class="sb-envelope-1">
                  <img src="/images/picture/envelope-2.png" alt="envelope" class="sb-envelope-2">
                  <div class="sb-cirkle-1"></div>
                  <div class="sb-cirkle-2"></div>
                  <div class="sb-cirkle-3"></div>
                </div> --}}
                <div class="sb-form-content">
                  <div class="sb-main-content">
                    <h3 class="sb-mb-30">Submit Product</h3> <br> <br>
                    <form class="form" action="/admin/submit-product" method="POST"  enctype="multipart/form-data">
                    <input type="hidden" name="_csrf" value="{{csrfToken}}">
                    <div class="sb-group-input">
                        <input id="form-image" type="file" name="topIMG" placeholder="Product photos"  accept="image/*" multiple style="padding-top:0.7rem;">
                        <label>产品主图 Product Main Photos (至少2张) *</label>
                    </div>

    
                    <div class="sb-price-variants">
                        <table class="sb-price-table">
                            <thead>
                                <tr>
                                    <th>颜色</th>
                                    <th>价格</th>
                                    <th>库存</th>
                                    <th>重量</th>
                                    <th>SKU</th>
                                    {{!-- <th colspan="3">尺寸 (cm)</th> --}}
                                </tr>
                                <tr class="sb-sub-header">
                                    <th>Color</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th>Weight (kg)</th>
                                    <th>SKU</th>
                                    {{!-- <th>长 (L)</th>
                                    <th>宽 (W)</th>
                                    <th>高 (H)</th> --}}
                                </tr>
                            </thead>
                            <tbody id="priceVariants">
                                <tr class="sb-variant-row">
                                    <td><input type="text" name="pricing[0][color]" class="form-control"></td>
                                    <td><input type="number" name="pricing[0][price]" step="0.01" class="form-control" min="0" required></td>
                                    <td><input type="number" name="pricing[0][stock]" class="form-control" min="0" required></td>
                                    <td><input type="number" name="pricing[0][weight]" step="0.1" class="form-control" min="0"></td>
                                    <td><input type="text" name="pricing[0][sku]" class="form-control"></td>
                                    {{!-- <td><input type="number" name="pricing[0][length]" step="0.1" class="form-control" min="0"></td>
                                    <td><input type="number" name="pricing[0][width]" step="0.1" class="form-control" min="0"></td>
                                    <td><input type="number" name="pricing[0][height]" step="0.1" class="form-control" min="0"></td> --}}
                                    <td><button type="button" class="sb-remove-variant btn btn-danger">×</button></td>
                                </tr>
                            </tbody>
                        </table>
                        <button type="button" id="addVariant" class="sb-btn sb-btn-sm sb-mt-10" style="margin-top:2rem;">
                            <span class="sb-icon">+</span>
                            添加规格 (Add Variant)
                        </button>
                    </div>
                    <br>

                    <div class="sb-group-input cate">
                        <select name="category[]" class="form-select" id="form-category-1" onchange="loadSubcategories(this.value, 1)">
                            <option>Pick a Category</option>
                            <!-- Categories will be populated here -->
                        </select> <br>
                        <select name="subcategory[]" class="form-select" id="form-subcategory-1" style="display: none;">
                                <option>Pick a Subcategory</option>
                                <!-- Subcategories will be loaded here -->
                        </select>   
                        <a class="sb-btn sb-btn-sm sb-mt-10" onclick="addCategoryInput()">Add Another Category</a>         
                   </div>       
<script>
var categories = {
  "electrotherapy": [
    "frequency electrotherapy devices"
  ],
  "bioresonance therapy": [
    "low frequency resonators"
  ],  
  "bioenergetic Therapy": [
    "bio energy terahertz devices"
  ], 
  "accessories": [
    "accessories"
  ],      
};
var categoryCount = 1;
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOMContentLoaded fired');
    console.log('Categories object:', categories);
    var categorySelects = document.querySelectorAll('select[id^="form-category"]');
    console.log('Found category selects:', categorySelects.length);
    populateCategories();
});
function populateCategories() {
    var categorySelects = document.querySelectorAll('select[id^="form-category"]');
    for (var i = 0; i < categorySelects.length; i++) {
        var categorySelect = categorySelects[i];
        for (var category in categories) {
            var option = document.createElement('option');
            option.value = category;
            option.text = category; // Use 'text' for older browser compatibility
            categorySelect.appendChild(option);
        }
    }
}
function loadSubcategories(category, index) {
    var subcategorySelect = document.getElementById('form-subcategory-' + index);

    if (category) {
        
        // Display the subcategory select element
        subcategorySelect.style.display = 'block';
        subcategorySelect.innerHTML = ''; // Clear previous subcategories

        // Check if the category has subcategories
        if (categories[category] && categories[category].length > 0) {
            // Loop through the subcategories and append them as options
            for (var subIndex = 0; subIndex < categories[category].length; subIndex++) {
                var subcategory = categories[category][subIndex];
                var option = document.createElement('option');
                option.value = subcategory;
                option.text = subcategory; // Use 'text' for older browser compatibility
                subcategorySelect.appendChild(option);
            }
            // Set the first subcategory as the default selected option
            subcategorySelect.value = categories[category][0];
        } else {
            // If no subcategories, add a placeholder and hide the select
            subcategorySelect.innerHTML = '<option value="">No Subcategories Available</option>';
            subcategorySelect.style.display = 'none';
        }
    } else {
        // Hide the subcategory select element if the default option is selected
        subcategorySelect.style.display = 'none';
    }
}

function addCategoryInput() {
    categoryCount++;
    
    // Create new category select
    var newCategorySelect = document.createElement('select');
    newCategorySelect.name = 'category[]';
    newCategorySelect.className = 'form-select';
    newCategorySelect.id = 'form-category-' + categoryCount;
    newCategorySelect.setAttribute('onchange', 'loadSubcategories(this.value, ' + categoryCount + ')');
    
    // Create new subcategory select
    var newSubcategorySelect = document.createElement('select');
    newSubcategorySelect.name = 'subcategory[]';
    newSubcategorySelect.className = 'form-select';
    newSubcategorySelect.id = 'form-subcategory-' + categoryCount;
    newSubcategorySelect.style.display = 'none';

    // Append the new selects to the form group
    var formGroup = document.querySelector('.cate');
    formGroup.appendChild(newCategorySelect);
    formGroup.appendChild(newSubcategorySelect);

    // Populate the new category select
    populateCategories();
}
</script>
                    <div class="sb-group-input">
                        <input type="text" class="form-control" name="name" >
                        <label>产品名称 (Product Name)  *</label>
                    </div>
                    {{!-- <div class="sb-group-input">
                        <input type="text" name="modelNumber" >
                        <label>型号 (Model Number)</label>
                    </div>
                    <div class="sb-group-input">
                        <input type="text" name="registrationNumber" >
                        <label>注册证号 (Registration Number)</label>
                    </div>
                    <div class="sb-group-input">
                        <input type="text" name="standardNumber" >
                        <label>执行标准号 (Standard Number)</label>
                    </div> --}}

                    <div class="sb-group-input">
                        <input type="text" name="manufacturer" >
                        <label>生产企业 (Manufacturer) </label>
                    </div>

                    {{!-- <div class="sb-group-input">
                        <textarea name="targetUsers" rows="2" placeholder="多个值用逗号分隔 separate with commas"></textarea>
                        <label>适用人群 (Target Users)</label>
                    </div> --}}

      <br>
        <div class="sb-group-input">
          <textarea class="form__input" id="form-intro" name="intro" rows="4" placeholder="Product Brief Introduction, less than 100 characters!"></textarea>
          {{!-- <p class="tip">Required! Tell us what the product does. Avoid hyperbolic words and emojis.</p> --}}
           <label class="form__label" for="form-intro">一句话介绍产品 160字内 (Product Intro) *</label>  
        </div>
        <div class="sb-group-input">
          <textarea class="form__input" name="content"  rows="20" cols="100" placeholder="Product Detail..." id="editor"></textarea>
           <label class="form__label" for="editor">详细产品介绍 (Content) *</label>
        </div>

<h4 class="sb-mb-15">SEO Descriptions</h4>  <br>
        <div class="sb-group-input">
            <input type="text" name="seoTitle" class="form__input" id="seoTitle" maxlength="60">
            <span id="titleCount" class="char-count">0/60</span>
                        <label class="form__label" for="seoTitle">Title  *</label>
        </div>    
       <div class="sb-group-input">
            <input type="text" name="seoKeyword" class="form__input" id="seoKeyword" maxlength="60" placeholder="video editor,video generator">
            <label class="form__label" for="seoKeyword">Keywords</label>
        </div>   
        <div class="sb-group-input">
            <textarea class="form__input" id="seoDescription" name="seoDescription" rows="4" placeholder="SEO Description within !" maxlength="160"></textarea>
            <span id="descriptionCount" class="char-count">0/160</span>
            <label class="form__label" for="seoDescription">Description *</label>  
        </div>
        <script>
            // Function to update character count
            function updateCharCount(inputField, countDisplay, maxLength) {
                var currentLength = inputField.value.length;
                countDisplay.innerHTML = currentLength + '/' + maxLength;
            }
            // Get elements
            var seoTitle = document.getElementById('seoTitle');
            var seoKeyword = document.getElementById('seoKeyword');
            var seoDescription = document.getElementById('seoDescription');
            var titleCount = document.getElementById('titleCount');
            var descriptionCount = document.getElementById('descriptionCount');
            // Function to add event listeners
            function addInputEventListener(element, countDisplay, maxLength) {
                if (element.addEventListener) {
                    element.addEventListener('input', function() {
                        updateCharCount(element, countDisplay, maxLength);
                    });
                } else if (element.attachEvent) { // For IE8 and below
                    element.attachEvent('onpropertychange', function() {
                        updateCharCount(element, countDisplay, maxLength);
                    });
                }
            }
            // Add event listeners for input fields
            addInputEventListener(seoTitle, titleCount, 60);
            addInputEventListener(seoDescription, descriptionCount, 160);
        </script>

                      <button class="sb-btn sb-cf-submit sb-show-success">
                        <span class="sb-icon">
                          <img src="/images/picture/arrow.svg" alt="icon">
                        </span>
                        <span>Send</span> 
                      </button>
                    </form>
                  </div>
                  <div class="sb-success-result">
                    <img src="/images/picture/success.jpg" alt="success" class="sb-mb-15">
                    <div class="sb-success-title sb-mb-15">Success!</div>
                    <p class="sb-text sb-mb-15">Your message has been sent <br>successfully</p>
                    <!-- button -->
                    <a href="index.html" class="sb-btn sb-btn-2">
                      <span class="sb-icon">
                        <img src="/images/picture/arrow-2.svg" alt="icon">
                      </span>
                      <span>Back to home</span>
                    </a>
                    <!-- button end -->
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      <!-- banner end -->

      <!-- contact info -->
      {{!-- <section class="sb-p-90-30">
        <div class="container">
          <div class="row">
            <div class="col-lg-4">
              <div class="sb-features-item sb-mb-60">
                <div class="sb-number">01</div>
                <div class="sb-feature-text">
                  <h3 class="sb-mb-15">Welcome</h3>
                  <p class="sb-text">Montréal, 1510 Rue Sauvé</p>
                </div>
              </div>
            </div>
            <div class="col-lg-4">
              <div class="sb-features-item sb-mb-60">
                <div class="sb-number">02</div>
                <div class="sb-feature-text">
                  <h3 class="sb-mb-15">Call</h3>
                  <p class="sb-text">+02 (044) 756-X6-52</p>
                </div>
              </div>
            </div>
            <div class="col-lg-4">
              <div class="sb-features-item sb-mb-60">
                <div class="sb-number">03</div>
                <div class="sb-feature-text">
                  <h3 class="sb-mb-15">Write</h3>
                  <p class="sb-text">starbelly@mail.com</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section> --}}
      <!-- contact info end -->

      {{#extend "js"}}
<script>
document.addEventListener('DOMContentLoaded', () => {
    let variantIndex = 1;
    
    document.getElementById('addVariant').addEventListener('click', () => {
        const newRow = document.querySelector('.sb-variant-row').cloneNode(true);
        const inputs = newRow.querySelectorAll('input');
        
        inputs.forEach(input => {
            const name = input.name.replace(/\[0\]/g, `[${variantIndex}]`);
            input.name = name;
            input.value = '';
        });

        document.getElementById('priceVariants').appendChild(newRow);
        variantIndex++;
    });

    document.addEventListener('click', (e) => {
        if(e.target.classList.contains('sb-remove-variant')) {
            if(document.querySelectorAll('.sb-variant-row').length > 1) {
                e.target.closest('tr').remove();
            }
        }
    });
});
</script>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/6.3.1/tinymce.min.js" integrity="sha512-eV68QXP3t5Jbsf18jfqT8xclEJSGvSK5uClUuqayUbF5IRK8e2/VSXIFHzEoBnNcvLBkHngnnd3CY7AFpUhF7w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
   (function() {
    const protocol = window.location.protocol;
    const hostname = window.location.hostname;
    const port = window.location.port;
    const isLocalhost = hostname === 'localhost' || hostname === '127.0.0.1';
    const domain = isLocalhost 
        ? `${protocol}//${hostname}:${port}`
        : `${protocol}//${hostname}${port ? ':' + port : ''}`;
    let returnFile = function(res){
      return domain + "/upload/products/" + res.data.filename;
    } 
    tinymce.init({
      selector: '#editor',
      plugins: 'image link table advtable preview',
      toolbar: 'undo redo styleselect bold italic alignleft aligncenter alignright bullist numlist outdent indent code link table preview |  image',
      table_class_list: [
      { title: 'Default', value: 'table table-bordered' },
      { title: 'Striped', value: 'table table-bordered table-striped' },
      { title: 'Hover', value: 'table table-bordered table-hover' }
      ], 
      relative_urls: false,
      remove_script_host: false,      
      images_upload_handler: (blobInfo, success, failure) => {
        const formData = new FormData();
        formData.append('image', blobInfo.blob(), blobInfo.filename());

        axios.post('/admin/upload2product', formData, {
          headers: { 'Content-Type': 'multipart/form-data' }
        })
          .then(response => success(returnFile(response)))
          .catch(error => failure('Image upload failed: ' + error));
      },
      file_picker_callback: (callback, value, meta) => {
        if (meta.filetype === 'image') {
          const input = document.createElement('input');
          input.setAttribute('type', 'file');
          input.setAttribute('accept', 'image/*');
          input.onchange = () => {
            const file = input.files[0];
            const formData = new FormData();
            formData.append('image', file);
            axios.post('/admin/upload2product', formData, {
              headers: { 'Content-Type': 'multipart/form-data' }
            })
              .then(response => {
                callback(returnFile(response));
              })
              .catch(error => console.error(error));
          };
          input.click();
        }
      }
    });
    tinymce.activeEditor.dom.addClass(tinymce.activeEditor.dom.select('table'), 'table table-bordered');
   })();
</script>
      {{/extend}}